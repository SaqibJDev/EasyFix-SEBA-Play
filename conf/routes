# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Import Secure routes
*       /                                       module:secure

# Home page
GET     /                                       Application.index

# Manufacturer page
	# Index Page: Manufacturer List Page
		GET     /Repair                                      		controllers.Repair.index
		GET     /Repair/                                      		controllers.Repair.index
	# Device Model List of selected Manufacturer 
		GET     /Repair/{maker}                   					controllers.Repair.manufacturer(maker)
	
	# Repair list of selected device
		GET     /Repair/{maker}/{deviceModel}                   	controllers.Repair.deviceModelRepairList(maker,deviceModel)
	
	# Repair details of selected repair
		GET     /Repair/{maker}/{deviceModel}/{repair}        		controllers.Repair.deviceModelRepairDetails(maker,deviceModel,repair)

	# Book Repair
		GET     /Repair/{maker}/{deviceModel}/{repair}/Technicians%20Availability        												controllers.BookRepair.index(maker,deviceModel,repair)
		GET     /Repair/{maker}/{deviceModel}/{repair}/Technicians%20Availability/Personal%20Information        						controllers.BookRepair.personalInformationForBookRepair(maker,deviceModel,repair)
		GET     /Repair/{maker}/{deviceModel}/{repair}/Technicians%20Availability/Personal%20Information/Review%20Appointment        	controllers.BookRepair.reviewAppointment(maker,deviceModel,repair)

	# External Technicians
		GET     /Repair/{maker}/{deviceModel}/{repair}/ExternalTechnicians  			controllers.ExternalTechnicians.show(maker,deviceModel,repair)
		GET     /Repair/{maker}/{deviceModel}/{repair}/ExternalTechnicians/{name}  		controllers.ExternalTechnicians.details(maker, deviceModel,repair,name)

	# Registration
		GET     /Registration					               controllers.Registration.Index
		POST    /register					               controllers.Registration.register
		GET		/registerConfirm							controllers.Registration.registerConfirm
		
	# UserProfile with appointment/repair list - redirect after login
		GET     /Profile/index/{customerid}	                controllers.Profile.index(customerid)
		GET     /Profile/history/{customerid}	                controllers.Profile.history(customerid)
	#Test urls redirect from profile
		GET		/Feedback/index/{customerid}/{repairid}											controllers.Feedback.index
		POST    /Feedback/submit							controllers.Feedback.submit(customerid, repairid, rating, comment)
		GET     /Feedback/Payment							controllers.Payment.index
	#User submits her payment data and continues to paymentReview
		POST    /Payment/paymentDetails								controllers.Payment.paymentDetails
	#Go back from payment to feedback
		GET   /Feedback/feedback/{customerid}/{repairid}							controllers.Feedback.feedback(customerid, repairid)
	#Go to step 3 payment review
		GET   /Payment/review								controllers.Payment.review(customerid, repairid)
		POST  /Payment/paymentConfirmation					controllers.Payment.paymentConfirmation(customerid, repairid)
	# selected repair
#		GET     /customers/{id}/profile/{repairid}					               controllers.Profile.showRepair(customerid,repairid)
	# submitFeedback
#		GET    /customers/{customerid}/profile/{repairid}/Feedback		    controllers.Feedback.index(customerid, repairid)
#		POST   /customers/{customerid}/profile/{repairid}/Feedback/submit	controllers.Feedback.submit(customerid, repairid, rating, comment)
	# Payment
#		GET    /customers/{customerid}/profile/{repairid}/Payment           controllers.Payment.index(repairid,customerid)
#		POST    /customers/{customerid}/profile/{repairid}/pay           controllers.Payment.pay(repairid,customerid)
#		GET    /customers/{customerid}/profile/{repairid}/paymentConfirmation           controllers.Payment.paymentConfirmation(repairid,customerid)
# Static Pages
	# Q&A page
		GET     /QandA						                   controllers.StaticPages.QandA
	
	# About Us page
		GET     /AboutUs						               controllers.StaticPages.AboutUs


# Ignore favicon requests
		GET     /favicon.ico                            404

# Map static resources from the /app/public folder to the /public path
GET     /public/                                staticDir:public

# Catch all
*       /{controller}/{action}                  {controller}.{action}
